function t(t,e){return e||"string"!=typeof t?JSON.stringify(t):t}function e(e,s){if(e instanceof Error&&"number"==typeof e.lineNumber&&"number"==typeof e.columnNumber){const a=t(e.message,!1);return void 0!==s?`${a} (at line ${e.lineNumber-3}, character ${e.columnNumber}, t=${s})`:`${a} (at line ${e.lineNumber-3}, character ${e.columnNumber})`}return void 0!==s?`Thrown: ${t(e,!0)} (at t=${s})`:`Thrown: ${t(e,!0)}`}function s(){for(let t=0;t<26;t++)delete globalThis[String.fromCharCode(65+t)];for(let t in globalThis)["currentFrame","currentTime","sampleRate"].includes(t)||delete globalThis[t]}class a extends AudioWorkletProcessor{constructor(){super({numberOfInputs:0}),this.audioSample=0,this.lastFlooredTime=-1,this.byteSample=0,this.sampleRatio=NaN,this.lastByteValue=[null,null],this.lastValue=[0,0],this.lastFuncValue=[null,null],this.isPlaying=!1,this.func=null,this.calcByteValue=null,this.songData={sampleRate:null,mode:null},this.sampleRateDivisor=1,this.playSpeed=1,this.postedErrorPriority=null,Object.seal(this),s(),function(){for(const t of Object.getOwnPropertyNames(globalThis))["currentFrame","currentTime","sampleRate"].includes(t)||("object"!=typeof globalThis[t]&&"function"!=typeof globalThis[t]||["globalThis"].includes(t)||Object.freeze(globalThis[t]),"function"==typeof globalThis[t]&&Object.hasOwnProperty.call(globalThis[t],"prototype")&&Object.freeze(globalThis[t].prototype),Object.defineProperty(globalThis,t,{writable:!1,configurable:!1}))}(),this.updateSampleRatio(),this.port.addEventListener("message",this.handleMessage.bind(this)),this.port.start()}handleMessage(t){const e=t.data;for(let t of["isPlaying","songData","sampleRateDivisor","playSpeed"])void 0!==e[t]&&(this[t]=e[t]);void 0!==e.songData&&this.updatePlaybackMode(),void 0!==e.setByteSample&&this.setByteSample(...e.setByteSample),void 0!==e.code&&this.refreshCode(e.code),e.updateSampleRatio&&this.updateSampleRatio(),e.displayedError&&this.postedErrorPriority<2&&(this.postedErrorPriority=null)}updatePlaybackMode(){this.calcByteValue="Bytebeat"===this.songData.mode?(t,e)=>{this.lastByteValue[e]=255&t,this.lastValue[e]=this.lastByteValue[e]/127.5-1}:"Signed Bytebeat"===this.songData.mode?(t,e)=>{this.lastByteValue[e]=t+128&255,this.lastValue[e]=this.lastByteValue[e]/127.5-1}:"Floatbeat"===this.songData.mode||"Funcbeat"===this.songData.mode?(t,e)=>{this.lastValue[e]=Math.min(Math.max(t,-1),1),this.lastByteValue[e]=Math.round(127.5*(this.lastValue[e]+1))}:(t,e)=>{this.lastByteValue[e]=NaN}}setByteSample(t,e=!1){this.byteSample=t,this.port.postMessage({[e?"clearCanvas":"clearDrawBuffer"]:!0}),this.audioSample=0,this.lastFlooredTime=-1;for(let t=0;t<2;t++)this.lastValue[t]=0,this.lastByteValue[t]=null,this.lastFuncValue[t]=null}refreshCode(t){const a=Object.getOwnPropertyNames(Math),i=a.map((t=>Math[t]));a.push("int"),i.push(Math.floor),a.push("window"),i.push(globalThis),s();const l=function(t,e=!0){{let e=t=t.trim(),s=0;if(e=e.replace(/^eval\s*\(\s*unescape\s*\(\s*escape/,(()=>(s++,""))),1===s&&(e=e.replace(/\.replace\(\/u\(\.\.\)\/g,([`"'])\$1%\1\)\)\)$/,(()=>(s++,""))),2===s)){console.debug("detected eval compress, escape args:",e);let s=!1;if(e=e.replace(/^\s*\((?<content>.*)\)\s*$/s,((t,e)=>(s=!0,e))),e=e.trim().match(s?/^(?<quote>[`"'])(?<content>.*)\1$/s:/^`(?<content>.*)`$/s),console.debug("string match:",s,e),e){const s=e.groups.quote??"`",a=e.groups.content;console.debug("string match info:",{quote:s,stringContent:a}),a.includes(e.groups.quote)||a.includes("\\")?console.debug("invalid string"):t=unescape(escape(a).replace(/u(..)/g,"$1%"))}}}return t}(t,!0),o=this.func;let r;try{r="compile","Funcbeat"===this.songData.mode?this.func=new Function(...a,l).bind(globalThis,...i):this.func=new Function(...a,"t",`return 0,\n${l||"undefined"}\n;`).bind(globalThis,...i),r="runtime","Funcbeat"===this.songData.mode&&(this.func=this.func()),this.func(0)}catch(t){return"compile"===r?(this.func=o,this.postedErrorPriority=2):this.postedErrorPriority=1,void this.port.postMessage({updateUrl:!0,errorMessage:{type:r,err:e(t,0),priority:this.postedErrorPriority}})}this.postedErrorPriority=null,this.port.postMessage({updateUrl:!0,errorMessage:null})}updateSampleRatio(){let t;return t=isNaN(this.sampleRatio)?0:this.lastFlooredTime-Math.floor(this.sampleRatio*this.audioSample),this.sampleRatio=this.songData.sampleRate*this.playSpeed/sampleRate,this.lastFlooredTime=Math.floor(this.sampleRatio*this.audioSample)-t,this.sampleRatio}process(t,s,a){const i=s[0],l=i[0].length;if(!l||!this.isPlaying||!this.func)return!0;let o=this.sampleRatio*this.audioSample,r=this.byteSample;const n=[];for(let t=0;t<l;t++){o+=this.sampleRatio;const s=Math.floor(o/this.sampleRateDivisor)*this.sampleRateDivisor;if(this.lastFlooredTime!==s){const t=Math.floor(r/this.sampleRateDivisor)*this.sampleRateDivisor;let a;try{a="Funcbeat"===this.songData.mode?this.func(t/this.songData.sampleRate,this.songData.sampleRate/this.sampleRateDivisor):this.func(t)}catch(s){null===this.postedErrorPriority&&(this.postedErrorPriority=0,this.port.postMessage({errorMessage:{type:"runtime",err:e(s,t)}})),a=NaN}a=Array.isArray(a)?[a[0],a[1]]:[a,a];let i=!1;for(const t in a){try{a[t]=Number(a[t])}catch(e){a[t]=NaN}a[t]===this.lastFuncValue[t]||isNaN(a[t])&&isNaN(this.lastFuncValue[t])||(i=!0,isNaN(a[t])?this.lastByteValue[t]=NaN:this.calcByteValue(a[t],t)),this.lastFuncValue[t]=a[t]}i&&n.push({t:t,value:[this.lastByteValue[0],this.lastByteValue[1]]}),r+=s-this.lastFlooredTime,this.lastFlooredTime=s}i[0][t]=this.lastValue[0],i[1][t]=this.lastValue[1]}this.audioSample+=l;const h={};return r!==this.byteSample&&(h.byteSample=r),n.length&&(h.drawBuffer=n),this.port.postMessage(h),this.byteSample=r,!0}}registerProcessor("bytebeatProcessor",a);
