/*! pako 2.0.4 https://github.com/nodeca/pako @license (MIT AND Zlib) */
const Z_FIXED$1=4,Z_BINARY=0,Z_TEXT=1,Z_UNKNOWN$1=2;function zero$1(e){for(let t=e.length;0<=--t;)e[t]=0}const STORED_BLOCK=0,STATIC_TREES=1,DYN_TREES=2,MIN_MATCH$1=3,MAX_MATCH$1=258,LENGTH_CODES$1=29,LITERALS$1=256,L_CODES$1=LITERALS$1+1+LENGTH_CODES$1,D_CODES$1=30,BL_CODES$1=19,HEAP_SIZE$1=2*L_CODES$1+1,MAX_BITS$1=15,Buf_size=16,MAX_BL_BITS=7,END_BLOCK=256,REP_3_6=16,REPZ_3_10=17,REPZ_11_138=18,extra_lbits=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),extra_dbits=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),extra_blbits=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),bl_order=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),DIST_CODE_LEN=512,static_ltree=Array(2*(L_CODES$1+2));zero$1(static_ltree);const static_dtree=Array(2*D_CODES$1);zero$1(static_dtree);const _dist_code=Array(DIST_CODE_LEN);zero$1(_dist_code);const _length_code=Array(MAX_MATCH$1-MIN_MATCH$1+1);zero$1(_length_code);const base_length=Array(LENGTH_CODES$1);zero$1(base_length);const base_dist=Array(D_CODES$1);zero$1(base_dist);function StaticTreeDesc(e,t,a,n,s){this.static_tree=e,this.extra_bits=t,this.extra_base=a,this.elems=n,this.max_length=s,this.has_stree=e&&e.length}let static_l_desc,static_d_desc,static_bl_desc;function TreeDesc(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}const d_code=e=>256>e?_dist_code[e]:_dist_code[256+(e>>>7)],put_short=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=255&t>>>8},send_bits=(e,t,a)=>{e.bi_valid>Buf_size-a?(e.bi_buf|=65535&t<<e.bi_valid,put_short(e,e.bi_buf),e.bi_buf=t>>Buf_size-e.bi_valid,e.bi_valid+=a-Buf_size):(e.bi_buf|=65535&t<<e.bi_valid,e.bi_valid+=a)},send_code=(e,t,a)=>{send_bits(e,a[2*t],a[2*t+1])},bi_reverse=(e,t)=>{let a=0;do a|=1&e,e>>>=1,a<<=1;while(0<--t);return a>>>1},bi_flush=e=>{16===e.bi_valid?(put_short(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):8<=e.bi_valid&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)},gen_bitlen=(e,t)=>{const a=t.dyn_tree,s=t.max_code,i=t.stat_desc.static_tree,d=t.stat_desc.has_stree,_=t.stat_desc.extra_bits,l=t.stat_desc.extra_base,o=t.stat_desc.max_length;let r,c,u,g,p,b,w=0;for(g=0;g<=MAX_BITS$1;g++)e.bl_count[g]=0;for(a[2*e.heap[e.heap_max]+1]=0,r=e.heap_max+1;r<HEAP_SIZE$1;r++)(c=e.heap[r],g=a[2*a[2*c+1]+1]+1,g>o&&(g=o,w++),a[2*c+1]=g,!(c>s))&&(e.bl_count[g]++,p=0,c>=l&&(p=_[c-l]),b=a[2*c],e.opt_len+=b*(g+p),d&&(e.static_len+=b*(i[2*c+1]+p)));if(0!==w){do{for(g=o-1;0===e.bl_count[g];)g--;e.bl_count[g]--,e.bl_count[g+1]+=2,e.bl_count[o]--,w-=2}while(0<w);for(g=o;0!==g;g--)for(c=e.bl_count[g];0!==c;)(u=e.heap[--r],!(u>s))&&(a[2*u+1]!==g&&(e.opt_len+=(g-a[2*u+1])*a[2*u],a[2*u+1]=g),c--)}},gen_codes=(e,t,a)=>{const s=Array(MAX_BITS$1+1);let i,d,_=0;for(i=1;i<=MAX_BITS$1;i++)s[i]=_=_+a[i-1]<<1;for(d=0;d<=t;d++){let t=e[2*d+1];0!==t&&(e[2*d]=bi_reverse(s[t]++,t))}},tr_static_init=()=>{let e,t,a,s,i;const d=Array(MAX_BITS$1+1);for(a=0,s=0;s<LENGTH_CODES$1-1;s++)for(base_length[s]=a,e=0;e<1<<extra_lbits[s];e++)_length_code[a++]=s;for(_length_code[a-1]=s,i=0,s=0;16>s;s++)for(base_dist[s]=i,e=0;e<1<<extra_dbits[s];e++)_dist_code[i++]=s;for(i>>=7;s<D_CODES$1;s++)for(base_dist[s]=i<<7,e=0;e<1<<extra_dbits[s]-7;e++)_dist_code[256+i++]=s;for(t=0;t<=MAX_BITS$1;t++)d[t]=0;for(e=0;143>=e;)static_ltree[2*e+1]=8,e++,d[8]++;for(;255>=e;)static_ltree[2*e+1]=9,e++,d[9]++;for(;279>=e;)static_ltree[2*e+1]=7,e++,d[7]++;for(;287>=e;)static_ltree[2*e+1]=8,e++,d[8]++;for(gen_codes(static_ltree,L_CODES$1+1,d),e=0;e<D_CODES$1;e++)static_dtree[2*e+1]=5,static_dtree[2*e]=bi_reverse(e,5);static_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS$1+1,L_CODES$1,MAX_BITS$1),static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES$1,MAX_BITS$1),static_bl_desc=new StaticTreeDesc([],extra_blbits,0,BL_CODES$1,MAX_BL_BITS)},init_block=e=>{let t;for(t=0;t<L_CODES$1;t++)e.dyn_ltree[2*t]=0;for(t=0;t<D_CODES$1;t++)e.dyn_dtree[2*t]=0;for(t=0;t<BL_CODES$1;t++)e.bl_tree[2*t]=0;e.dyn_ltree[2*END_BLOCK]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0},bi_windup=e=>{8<e.bi_valid?put_short(e,e.bi_buf):0<e.bi_valid&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},copy_block=(e,t,a,n)=>{bi_windup(e),n&&(put_short(e,a),put_short(e,~a)),e.pending_buf.set(e.window.subarray(t,t+a),e.pending),e.pending+=a},smaller=(e,t,a,n)=>{const s=2*t,i=2*a;return e[s]<e[i]||e[s]===e[i]&&n[t]<=n[a]},pqdownheap=(e,t,a)=>{const n=e.heap[a];for(let s=a<<1;s<=e.heap_len&&(s<e.heap_len&&smaller(t,e.heap[s+1],e.heap[s],e.depth)&&s++,!smaller(t,n,e.heap[s],e.depth));)e.heap[a]=e.heap[s],a=s,s<<=1;e.heap[a]=n},compress_block=(e,t,a)=>{let n,s,i,d,_=0;if(0!==e.last_lit)do n=e.pending_buf[e.d_buf+2*_]<<8|e.pending_buf[e.d_buf+2*_+1],s=e.pending_buf[e.l_buf+_],_++,0===n?send_code(e,s,t):(i=_length_code[s],send_code(e,i+LITERALS$1+1,t),d=extra_lbits[i],0!==d&&(s-=base_length[i],send_bits(e,s,d)),n--,i=d_code(n),send_code(e,i,a),d=extra_dbits[i],0!==d&&(n-=base_dist[i],send_bits(e,n,d)));while(_<e.last_lit);send_code(e,END_BLOCK,t)},build_tree=(e,t)=>{const a=t.dyn_tree,s=t.stat_desc.static_tree,i=t.stat_desc.has_stree,d=t.stat_desc.elems;let _,l,o,r=-1;for(e.heap_len=0,e.heap_max=HEAP_SIZE$1,_=0;_<d;_++)0===a[2*_]?a[2*_+1]=0:(e.heap[++e.heap_len]=r=_,e.depth[_]=0);for(;2>e.heap_len;)o=e.heap[++e.heap_len]=2>r?++r:0,a[2*o]=1,e.depth[o]=0,e.opt_len--,i&&(e.static_len-=s[2*o+1]);for(t.max_code=r,_=e.heap_len>>1;1<=_;_--)pqdownheap(e,a,_);o=d;do _=e.heap[1],e.heap[1]=e.heap[e.heap_len--],pqdownheap(e,a,1),l=e.heap[1],e.heap[--e.heap_max]=_,e.heap[--e.heap_max]=l,a[2*o]=a[2*_]+a[2*l],e.depth[o]=(e.depth[_]>=e.depth[l]?e.depth[_]:e.depth[l])+1,a[2*_+1]=a[2*l+1]=o,e.heap[1]=o++,pqdownheap(e,a,1);while(2<=e.heap_len);e.heap[--e.heap_max]=e.heap[1],gen_bitlen(e,t),gen_codes(a,r,e.bl_count)},scan_tree=(e,t,a)=>{let s,i,d=-1,_=t[1],l=0,o=7,r=4;for(0===_&&(o=138,r=3),t[2*(a+1)+1]=65535,s=0;s<=a;s++){if(i=_,_=t[2*(s+1)+1],++l<o&&i===_)continue;else l<r?e.bl_tree[2*i]+=l:0===i?10>=l?e.bl_tree[2*REPZ_3_10]++:e.bl_tree[2*REPZ_11_138]++:(i!==d&&e.bl_tree[2*i]++,e.bl_tree[2*REP_3_6]++);l=0,d=i,0===_?(o=138,r=3):i===_?(o=6,r=3):(o=7,r=4)}},send_tree=(e,t,a)=>{let s,i,d=-1,_=t[1],l=0,o=7,r=4;for(0===_&&(o=138,r=3),s=0;s<=a;s++){if(i=_,_=t[2*(s+1)+1],++l<o&&i===_)continue;else if(l<r)do send_code(e,i,e.bl_tree);while(0!=--l);else 0===i?10>=l?(send_code(e,REPZ_3_10,e.bl_tree),send_bits(e,l-3,3)):(send_code(e,REPZ_11_138,e.bl_tree),send_bits(e,l-11,7)):(i!==d&&(send_code(e,i,e.bl_tree),l--),send_code(e,REP_3_6,e.bl_tree),send_bits(e,l-3,2));l=0,d=i,0===_?(o=138,r=3):i===_?(o=6,r=3):(o=7,r=4)}},build_bl_tree=e=>{let t;for(scan_tree(e,e.dyn_ltree,e.l_desc.max_code),scan_tree(e,e.dyn_dtree,e.d_desc.max_code),build_tree(e,e.bl_desc),t=BL_CODES$1-1;3<=t&&0===e.bl_tree[2*bl_order[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t},send_all_trees=(e,t,a,n)=>{let s;for(send_bits(e,t-257,5),send_bits(e,a-1,5),send_bits(e,n-4,4),s=0;s<n;s++)send_bits(e,e.bl_tree[2*bl_order[s]+1],3);send_tree(e,e.dyn_ltree,t-1),send_tree(e,e.dyn_dtree,a-1)},detect_data_type=e=>{let t,a=4093624447;for(t=0;31>=t;t++,a>>>=1)if(1&a&&0!==e.dyn_ltree[2*t])return Z_BINARY;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return Z_TEXT;for(t=32;t<LITERALS$1;t++)if(0!==e.dyn_ltree[2*t])return Z_TEXT;return Z_BINARY};let static_init_done=!1;const _tr_init$1=e=>{static_init_done||(tr_static_init(),static_init_done=!0),e.l_desc=new TreeDesc(e.dyn_ltree,static_l_desc),e.d_desc=new TreeDesc(e.dyn_dtree,static_d_desc),e.bl_desc=new TreeDesc(e.bl_tree,static_bl_desc),e.bi_buf=0,e.bi_valid=0,init_block(e)},_tr_stored_block$1=(e,t,a,n)=>{send_bits(e,0+(n?1:0),3),copy_block(e,t,a,!0)},_tr_align$1=e=>{send_bits(e,STATIC_TREES<<1,3),send_code(e,END_BLOCK,static_ltree),bi_flush(e)},_tr_flush_block$1=(e,t,a,n)=>{let s,i,d=0;0<e.level?(e.strm.data_type===Z_UNKNOWN$1&&(e.strm.data_type=detect_data_type(e)),build_tree(e,e.l_desc),build_tree(e,e.d_desc),d=build_bl_tree(e),s=e.opt_len+3+7>>>3,i=e.static_len+3+7>>>3,i<=s&&(s=i)):s=i=a+5,a+4<=s&&-1!==t?_tr_stored_block$1(e,t,a,n):e.strategy===Z_FIXED$1||i===s?(send_bits(e,(STATIC_TREES<<1)+(n?1:0),3),compress_block(e,static_ltree,static_dtree)):(send_bits(e,(DYN_TREES<<1)+(n?1:0),3),send_all_trees(e,e.l_desc.max_code+1,e.d_desc.max_code+1,d+1),compress_block(e,e.dyn_ltree,e.dyn_dtree)),init_block(e),n&&bi_windup(e)},_tr_tally$1=(e,t,a)=>(e.pending_buf[e.d_buf+2*e.last_lit]=255&t>>>8,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&a,e.last_lit++,0===t?e.dyn_ltree[2*a]++:(e.matches++,t--,e.dyn_ltree[2*(_length_code[a]+LITERALS$1+1)]++,e.dyn_dtree[2*d_code(t)]++),e.last_lit===e.lit_bufsize-1);var _tr_init_1=_tr_init$1,_tr_stored_block_1=_tr_stored_block$1,_tr_flush_block_1=_tr_flush_block$1,_tr_tally_1=_tr_tally$1,_tr_align_1=_tr_align$1,trees={_tr_init:_tr_init_1,_tr_stored_block:_tr_stored_block_1,_tr_flush_block:_tr_flush_block_1,_tr_tally:_tr_tally_1,_tr_align:_tr_align_1};const adler32=(e,t,a,s)=>{let i=0|65535&e,d=0|65535&e>>>16,_=0;for(;0!==a;){_=2e3<a?2e3:a,a-=_;do i=0|i+t[s++],d=0|d+i;while(--_);i%=65521,d%=65521}return 0|(i|d<<16)};var adler32_1=adler32;const makeTable=()=>{let e,t=[];for(var a=0;256>a;a++){e=a;for(var s=0;8>s;s++)e=1&e?3988292384^e>>>1:e>>>1;t[a]=e}return t},crcTable=new Uint32Array(makeTable()),crc32=(e,t,a,n)=>{e^=-1;for(let s=n;s<n+a;s++)e=e>>>8^crcTable[255&(e^t[s])];return-1^e};var crc32_1=crc32,messages={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},constants$2={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init,_tr_stored_block,_tr_flush_block,_tr_tally,_tr_align}=trees,{Z_NO_FLUSH:Z_NO_FLUSH$2,Z_PARTIAL_FLUSH,Z_FULL_FLUSH:Z_FULL_FLUSH$1,Z_FINISH:Z_FINISH$3,Z_BLOCK:Z_BLOCK$1,Z_OK:Z_OK$3,Z_STREAM_END:Z_STREAM_END$3,Z_STREAM_ERROR:Z_STREAM_ERROR$2,Z_DATA_ERROR:Z_DATA_ERROR$2,Z_BUF_ERROR:Z_BUF_ERROR$1,Z_DEFAULT_COMPRESSION:Z_DEFAULT_COMPRESSION$1,Z_FILTERED,Z_HUFFMAN_ONLY,Z_RLE,Z_FIXED,Z_DEFAULT_STRATEGY:Z_DEFAULT_STRATEGY$1,Z_UNKNOWN,Z_DEFLATED:Z_DEFLATED$2}=constants$2,MAX_MEM_LEVEL=9,MAX_WBITS$1=15,DEF_MEM_LEVEL=8,LENGTH_CODES=29,LITERALS=256,L_CODES=LITERALS+1+LENGTH_CODES,D_CODES=30,BL_CODES=19,HEAP_SIZE=2*L_CODES+1,MAX_BITS=15,MIN_MATCH=3,MAX_MATCH=258,MIN_LOOKAHEAD=MAX_MATCH+MIN_MATCH+1,PRESET_DICT=32,INIT_STATE=42,EXTRA_STATE=69,NAME_STATE=73,COMMENT_STATE=91,HCRC_STATE=103,BUSY_STATE=113,FINISH_STATE=666,BS_NEED_MORE=1,BS_BLOCK_DONE=2,BS_FINISH_STARTED=3,BS_FINISH_DONE=4,OS_CODE=3,err=(e,t)=>(e.msg=messages[t],t),rank=e=>(e<<1)-(4<e?9:0),zero=e=>{for(let t=e.length;0<=--t;)e[t]=0};let HASH_ZLIB=(e,t,a)=>(t<<e.hash_shift^a)&e.hash_mask,HASH=HASH_ZLIB;const flush_pending=e=>{const t=e.state;let a=t.pending;a>e.avail_out&&(a=e.avail_out);0===a||(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+a),e.next_out),e.next_out+=a,t.pending_out+=a,e.total_out+=a,e.avail_out-=a,t.pending-=a,0===t.pending&&(t.pending_out=0))},flush_block_only=(e,t)=>{_tr_flush_block(e,0<=e.block_start?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,flush_pending(e.strm)},put_byte=(e,t)=>{e.pending_buf[e.pending++]=t},putShortMSB=(e,t)=>{e.pending_buf[e.pending++]=255&t>>>8,e.pending_buf[e.pending++]=255&t},read_buf=(e,t,a,n)=>{let s=e.avail_in;return(s>n&&(s=n),0===s)?0:(e.avail_in-=s,t.set(e.input.subarray(e.next_in,e.next_in+s),a),1===e.state.wrap?e.adler=adler32_1(e.adler,t,s,a):2===e.state.wrap&&(e.adler=crc32_1(e.adler,t,s,a)),e.next_in+=s,e.total_in+=s,s)},longest_match=(e,t)=>{let a,n,s=e.max_chain_length,i=e.strstart,d=e.prev_length,_=e.nice_match;const l=e.strstart>e.w_size-MIN_LOOKAHEAD?e.strstart-(e.w_size-MIN_LOOKAHEAD):0,o=e.window,r=e.w_mask,h=e.prev,c=e.strstart+MAX_MATCH;let u=o[i+d-1],g=o[i+d];e.prev_length>=e.good_match&&(s>>=2),_>e.lookahead&&(_=e.lookahead);do{if(a=t,o[a+d]!==g||o[a+d-1]!==u||o[a]!==o[i]||o[++a]!==o[i+1])continue;i+=2,a++;do;while(o[++i]===o[++a]&&o[++i]===o[++a]&&o[++i]===o[++a]&&o[++i]===o[++a]&&o[++i]===o[++a]&&o[++i]===o[++a]&&o[++i]===o[++a]&&o[++i]===o[++a]&&i<c);if(n=MAX_MATCH-(c-i),i=c-MAX_MATCH,n>d){if(e.match_start=t,d=n,n>=_)break;u=o[i+d-1],g=o[i+d]}}while((t=h[t&r])>l&&0!=--s);return d<=e.lookahead?d:e.lookahead},fill_window=e=>{const t=e.w_size;let a,s,i,d,_;do{if(d=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-MIN_LOOKAHEAD)){e.window.set(e.window.subarray(t,t+t),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,s=e.hash_size,a=s;do i=e.head[--a],e.head[a]=i>=t?i-t:0;while(--s);s=t,a=s;do i=e.prev[--a],e.prev[a]=i>=t?i-t:0;while(--s);d+=t}if(0===e.strm.avail_in)break;if(s=read_buf(e.strm,e.window,e.strstart+e.lookahead,d),e.lookahead+=s,e.lookahead+e.insert>=MIN_MATCH)for(_=e.strstart-e.insert,e.ins_h=e.window[_],e.ins_h=HASH(e,e.ins_h,e.window[_+1]);e.insert&&(e.ins_h=HASH(e,e.ins_h,e.window[_+MIN_MATCH-1]),e.prev[_&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=_,_++,e.insert--,!(e.lookahead+e.insert<MIN_MATCH)););}while(e.lookahead<MIN_LOOKAHEAD&&0!==e.strm.avail_in)},deflate_stored=(e,t)=>{let a=65535;for(a>e.pending_buf_size-5&&(a=e.pending_buf_size-5);;){if(1>=e.lookahead){if(fill_window(e),0===e.lookahead&&t===Z_NO_FLUSH$2)return BS_NEED_MORE;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;const n=e.block_start+a;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,flush_block_only(e,!1),0===e.strm.avail_out))return BS_NEED_MORE;if(e.strstart-e.block_start>=e.w_size-MIN_LOOKAHEAD&&(flush_block_only(e,!1),0===e.strm.avail_out))return BS_NEED_MORE}return e.insert=0,t===Z_FINISH$3?(flush_block_only(e,!0),0===e.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):e.strstart>e.block_start&&(flush_block_only(e,!1),0===e.strm.avail_out)?BS_NEED_MORE:BS_NEED_MORE},deflate_fast=(e,t)=>{let a,n;for(;;){if(e.lookahead<MIN_LOOKAHEAD){if(fill_window(e),e.lookahead<MIN_LOOKAHEAD&&t===Z_NO_FLUSH$2)return BS_NEED_MORE;if(0===e.lookahead)break}if(a=0,e.lookahead>=MIN_MATCH&&(e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+MIN_MATCH-1]),a=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==a&&e.strstart-a<=e.w_size-MIN_LOOKAHEAD&&(e.match_length=longest_match(e,a)),!(e.match_length>=MIN_MATCH))n=_tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;else if(n=_tr_tally(e,e.strstart-e.match_start,e.match_length-MIN_MATCH),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=MIN_MATCH){e.match_length--;do e.strstart++,e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+MIN_MATCH-1]),a=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart;while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+1]);if(n&&(flush_block_only(e,!1),0===e.strm.avail_out))return BS_NEED_MORE}return e.insert=e.strstart<MIN_MATCH-1?e.strstart:MIN_MATCH-1,t===Z_FINISH$3?(flush_block_only(e,!0),0===e.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):e.last_lit&&(flush_block_only(e,!1),0===e.strm.avail_out)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_slow=(e,t)=>{let a,n,s;for(;;){if(e.lookahead<MIN_LOOKAHEAD){if(fill_window(e),e.lookahead<MIN_LOOKAHEAD&&t===Z_NO_FLUSH$2)return BS_NEED_MORE;if(0===e.lookahead)break}if(a=0,e.lookahead>=MIN_MATCH&&(e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+MIN_MATCH-1]),a=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=MIN_MATCH-1,0!==a&&e.prev_length<e.max_lazy_match&&e.strstart-a<=e.w_size-MIN_LOOKAHEAD&&(e.match_length=longest_match(e,a),5>=e.match_length&&(e.strategy===Z_FILTERED||e.match_length===MIN_MATCH&&4096<e.strstart-e.match_start)&&(e.match_length=MIN_MATCH-1)),e.prev_length>=MIN_MATCH&&e.match_length<=e.prev_length){s=e.strstart+e.lookahead-MIN_MATCH,n=_tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-MIN_MATCH),e.lookahead-=e.prev_length-1,e.prev_length-=2;do++e.strstart<=s&&(e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+MIN_MATCH-1]),a=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart);while(0!=--e.prev_length);if(e.match_available=0,e.match_length=MIN_MATCH-1,e.strstart++,n&&(flush_block_only(e,!1),0===e.strm.avail_out))return BS_NEED_MORE}else if(!e.match_available)e.match_available=1,e.strstart++,e.lookahead--;else if(n=_tr_tally(e,0,e.window[e.strstart-1]),n&&flush_block_only(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return BS_NEED_MORE}return e.match_available&&(n=_tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<MIN_MATCH-1?e.strstart:MIN_MATCH-1,t===Z_FINISH$3?(flush_block_only(e,!0),0===e.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):e.last_lit&&(flush_block_only(e,!1),0===e.strm.avail_out)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_rle=(e,t)=>{let a,n,s,i;for(const d=e.window;;){if(e.lookahead<=MAX_MATCH){if(fill_window(e),e.lookahead<=MAX_MATCH&&t===Z_NO_FLUSH$2)return BS_NEED_MORE;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=MIN_MATCH&&0<e.strstart&&(s=e.strstart-1,n=d[s],n===d[++s]&&n===d[++s]&&n===d[++s])){i=e.strstart+MAX_MATCH;do;while(n===d[++s]&&n===d[++s]&&n===d[++s]&&n===d[++s]&&n===d[++s]&&n===d[++s]&&n===d[++s]&&n===d[++s]&&s<i);e.match_length=MAX_MATCH-(i-s),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=MIN_MATCH?(a=_tr_tally(e,1,e.match_length-MIN_MATCH),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(a=_tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),a&&(flush_block_only(e,!1),0===e.strm.avail_out))return BS_NEED_MORE}return e.insert=0,t===Z_FINISH$3?(flush_block_only(e,!0),0===e.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):e.last_lit&&(flush_block_only(e,!1),0===e.strm.avail_out)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_huff=(e,t)=>{for(let a;;){if(0===e.lookahead&&(fill_window(e),0===e.lookahead)){if(t===Z_NO_FLUSH$2)return BS_NEED_MORE;break}if(e.match_length=0,a=_tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,a&&(flush_block_only(e,!1),0===e.strm.avail_out))return BS_NEED_MORE}return e.insert=0,t===Z_FINISH$3?(flush_block_only(e,!0),0===e.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):e.last_lit&&(flush_block_only(e,!1),0===e.strm.avail_out)?BS_NEED_MORE:BS_BLOCK_DONE};function Config(e,t,a,n,s){this.good_length=e,this.max_lazy=t,this.nice_length=a,this.max_chain=n,this.func=s}const configuration_table=[new Config(0,0,0,0,deflate_stored),new Config(4,4,8,4,deflate_fast),new Config(4,5,16,8,deflate_fast),new Config(4,6,32,32,deflate_fast),new Config(4,4,16,16,deflate_slow),new Config(8,16,32,32,deflate_slow),new Config(8,16,128,128,deflate_slow),new Config(8,32,128,256,deflate_slow),new Config(32,128,258,1024,deflate_slow),new Config(32,258,258,4096,deflate_slow)],lm_init=e=>{e.window_size=2*e.w_size,zero(e.head),e.max_lazy_match=configuration_table[e.level].max_lazy,e.good_match=configuration_table[e.level].good_length,e.nice_match=configuration_table[e.level].nice_length,e.max_chain_length=configuration_table[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=MIN_MATCH-1,e.match_available=0,e.ins_h=0};function DeflateState(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Z_DEFLATED$2,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(2*HEAP_SIZE),this.dyn_dtree=new Uint16Array(2*(2*D_CODES+1)),this.bl_tree=new Uint16Array(2*(2*BL_CODES+1)),zero(this.dyn_ltree),zero(this.dyn_dtree),zero(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(MAX_BITS+1),this.heap=new Uint16Array(2*L_CODES+1),zero(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(2*L_CODES+1),zero(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const deflateResetKeep=e=>{if(!e||!e.state)return err(e,Z_STREAM_ERROR$2);e.total_in=e.total_out=0,e.data_type=Z_UNKNOWN;const t=e.state;return t.pending=0,t.pending_out=0,0>t.wrap&&(t.wrap=-t.wrap),t.status=t.wrap?INIT_STATE:BUSY_STATE,e.adler=2===t.wrap?0:1,t.last_flush=Z_NO_FLUSH$2,_tr_init(t),Z_OK$3},deflateReset=e=>{const t=deflateResetKeep(e);return t===Z_OK$3&&lm_init(e.state),t},deflateSetHeader=(e,t)=>e&&e.state?2===e.state.wrap?(e.state.gzhead=t,Z_OK$3):Z_STREAM_ERROR$2:Z_STREAM_ERROR$2,deflateInit2=(e,t,a,n,i,d)=>{if(!e)return Z_STREAM_ERROR$2;let _=1;if(t===Z_DEFAULT_COMPRESSION$1&&(t=6),0>n?(_=0,n=-n):15<n&&(_=2,n-=16),1>i||i>MAX_MEM_LEVEL||a!==Z_DEFLATED$2||8>n||15<n||0>t||9<t||0>d||d>Z_FIXED)return err(e,Z_STREAM_ERROR$2);8===n&&(n=9);const l=new DeflateState;return e.state=l,l.strm=e,l.wrap=_,l.gzhead=null,l.w_bits=n,l.w_size=1<<l.w_bits,l.w_mask=l.w_size-1,l.hash_bits=i+7,l.hash_size=1<<l.hash_bits,l.hash_mask=l.hash_size-1,l.hash_shift=~~((l.hash_bits+MIN_MATCH-1)/MIN_MATCH),l.window=new Uint8Array(2*l.w_size),l.head=new Uint16Array(l.hash_size),l.prev=new Uint16Array(l.w_size),l.lit_bufsize=1<<i+6,l.pending_buf_size=4*l.lit_bufsize,l.pending_buf=new Uint8Array(l.pending_buf_size),l.d_buf=1*l.lit_bufsize,l.l_buf=3*l.lit_bufsize,l.level=t,l.strategy=d,l.method=a,deflateReset(e)},deflateInit=(e,t)=>deflateInit2(e,t,Z_DEFLATED$2,MAX_WBITS$1,DEF_MEM_LEVEL,Z_DEFAULT_STRATEGY$1),deflate$2=(e,t)=>{let a,n;if(!e||!e.state||t>Z_BLOCK$1||0>t)return e?err(e,Z_STREAM_ERROR$2):Z_STREAM_ERROR$2;const i=e.state;if(!e.output||!e.input&&0!==e.avail_in||i.status===FINISH_STATE&&t!==Z_FINISH$3)return err(e,0===e.avail_out?Z_BUF_ERROR$1:Z_STREAM_ERROR$2);i.strm=e;const s=i.last_flush;if(i.last_flush=t,i.status===INIT_STATE)if(2===i.wrap)e.adler=0,put_byte(i,31),put_byte(i,139),put_byte(i,8),i.gzhead?(put_byte(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),put_byte(i,255&i.gzhead.time),put_byte(i,255&i.gzhead.time>>8),put_byte(i,255&i.gzhead.time>>16),put_byte(i,255&i.gzhead.time>>24),put_byte(i,9===i.level?2:i.strategy>=Z_HUFFMAN_ONLY||2>i.level?4:0),put_byte(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(put_byte(i,255&i.gzhead.extra.length),put_byte(i,255&i.gzhead.extra.length>>8)),i.gzhead.hcrc&&(e.adler=crc32_1(e.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=EXTRA_STATE):(put_byte(i,0),put_byte(i,0),put_byte(i,0),put_byte(i,0),put_byte(i,0),put_byte(i,9===i.level?2:i.strategy>=Z_HUFFMAN_ONLY||2>i.level?4:0),put_byte(i,OS_CODE),i.status=BUSY_STATE);else{let t=Z_DEFLATED$2+(i.w_bits-8<<4)<<8,a=-1;a=i.strategy>=Z_HUFFMAN_ONLY||2>i.level?0:6>i.level?1:6===i.level?2:3,t|=a<<6,0!==i.strstart&&(t|=PRESET_DICT),t+=31-t%31,i.status=BUSY_STATE,putShortMSB(i,t),0!==i.strstart&&(putShortMSB(i,e.adler>>>16),putShortMSB(i,65535&e.adler)),e.adler=1}if(i.status===EXTRA_STATE)if(i.gzhead.extra){for(a=i.pending;i.gzindex<(65535&i.gzhead.extra.length)&&!(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>a&&(e.adler=crc32_1(e.adler,i.pending_buf,i.pending-a,a)),flush_pending(e),a=i.pending,i.pending===i.pending_buf_size));)put_byte(i,255&i.gzhead.extra[i.gzindex]),i.gzindex++;i.gzhead.hcrc&&i.pending>a&&(e.adler=crc32_1(e.adler,i.pending_buf,i.pending-a,a)),i.gzindex===i.gzhead.extra.length&&(i.gzindex=0,i.status=NAME_STATE)}else i.status=NAME_STATE;if(i.status===NAME_STATE)if(i.gzhead.name){a=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>a&&(e.adler=crc32_1(e.adler,i.pending_buf,i.pending-a,a)),flush_pending(e),a=i.pending,i.pending===i.pending_buf_size)){n=1;break}n=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,put_byte(i,n)}while(0!==n);i.gzhead.hcrc&&i.pending>a&&(e.adler=crc32_1(e.adler,i.pending_buf,i.pending-a,a)),0===n&&(i.gzindex=0,i.status=COMMENT_STATE)}else i.status=COMMENT_STATE;if(i.status===COMMENT_STATE)if(i.gzhead.comment){a=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>a&&(e.adler=crc32_1(e.adler,i.pending_buf,i.pending-a,a)),flush_pending(e),a=i.pending,i.pending===i.pending_buf_size)){n=1;break}n=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,put_byte(i,n)}while(0!==n);i.gzhead.hcrc&&i.pending>a&&(e.adler=crc32_1(e.adler,i.pending_buf,i.pending-a,a)),0===n&&(i.status=HCRC_STATE)}else i.status=HCRC_STATE;if(i.status===HCRC_STATE&&(i.gzhead.hcrc?(i.pending+2>i.pending_buf_size&&flush_pending(e),i.pending+2<=i.pending_buf_size&&(put_byte(i,255&e.adler),put_byte(i,255&e.adler>>8),e.adler=0,i.status=BUSY_STATE)):i.status=BUSY_STATE),0!==i.pending){if(flush_pending(e),0===e.avail_out)return i.last_flush=-1,Z_OK$3;}else if(0===e.avail_in&&rank(t)<=rank(s)&&t!==Z_FINISH$3)return err(e,Z_BUF_ERROR$1);if(i.status===FINISH_STATE&&0!==e.avail_in)return err(e,Z_BUF_ERROR$1);if(0!==e.avail_in||0!==i.lookahead||t!==Z_NO_FLUSH$2&&i.status!==FINISH_STATE){let a=i.strategy===Z_HUFFMAN_ONLY?deflate_huff(i,t):i.strategy===Z_RLE?deflate_rle(i,t):configuration_table[i.level].func(i,t);if((a===BS_FINISH_STARTED||a===BS_FINISH_DONE)&&(i.status=FINISH_STATE),a===BS_NEED_MORE||a===BS_FINISH_STARTED)return 0===e.avail_out&&(i.last_flush=-1),Z_OK$3;if(a===BS_BLOCK_DONE&&(t===Z_PARTIAL_FLUSH?_tr_align(i):t!==Z_BLOCK$1&&(_tr_stored_block(i,0,0,!1),t===Z_FULL_FLUSH$1&&(zero(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),flush_pending(e),0===e.avail_out))return i.last_flush=-1,Z_OK$3}return t===Z_FINISH$3?0>=i.wrap?Z_STREAM_END$3:(2===i.wrap?(put_byte(i,255&e.adler),put_byte(i,255&e.adler>>8),put_byte(i,255&e.adler>>16),put_byte(i,255&e.adler>>24),put_byte(i,255&e.total_in),put_byte(i,255&e.total_in>>8),put_byte(i,255&e.total_in>>16),put_byte(i,255&e.total_in>>24)):(putShortMSB(i,e.adler>>>16),putShortMSB(i,65535&e.adler)),flush_pending(e),0<i.wrap&&(i.wrap=-i.wrap),0===i.pending?Z_STREAM_END$3:Z_OK$3):Z_OK$3},deflateEnd=e=>{if(!e||!e.state)return Z_STREAM_ERROR$2;const t=e.state.status;return t!==INIT_STATE&&t!==EXTRA_STATE&&t!==NAME_STATE&&t!==COMMENT_STATE&&t!==HCRC_STATE&&t!==BUSY_STATE&&t!==FINISH_STATE?err(e,Z_STREAM_ERROR$2):(e.state=null,t===BUSY_STATE?err(e,Z_DATA_ERROR$2):Z_OK$3)},deflateSetDictionary=(e,t)=>{let a=t.length;if(!e||!e.state)return Z_STREAM_ERROR$2;const i=e.state,n=i.wrap;if(2===n||1===n&&i.status!==INIT_STATE||i.lookahead)return Z_STREAM_ERROR$2;if(1===n&&(e.adler=adler32_1(e.adler,t,a,0)),i.wrap=0,a>=i.w_size){0===n&&(zero(i.head),i.strstart=0,i.block_start=0,i.insert=0);let e=new Uint8Array(i.w_size);e.set(t.subarray(a-i.w_size,a),0),t=e,a=i.w_size}const s=e.avail_in,d=e.next_in,_=e.input;for(e.avail_in=a,e.next_in=0,e.input=t,fill_window(i);i.lookahead>=MIN_MATCH;){let e=i.strstart,t=i.lookahead-(MIN_MATCH-1);do i.ins_h=HASH(i,i.ins_h,i.window[e+MIN_MATCH-1]),i.prev[e&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=e,e++;while(--t);i.strstart=e,i.lookahead=MIN_MATCH-1,fill_window(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=MIN_MATCH-1,i.match_available=0,e.next_in=d,e.input=_,e.avail_in=s,i.wrap=n,Z_OK$3};var deflateInit_1=deflateInit,deflateInit2_1=deflateInit2,deflateReset_1=deflateReset,deflateResetKeep_1=deflateResetKeep,deflateSetHeader_1=deflateSetHeader,deflate_2$1=deflate$2,deflateEnd_1=deflateEnd,deflateSetDictionary_1=deflateSetDictionary,deflateInfo="pako deflate (from Nodeca project)",deflate_1$2={deflateInit:deflateInit_1,deflateInit2:deflateInit2_1,deflateReset:deflateReset_1,deflateResetKeep:deflateResetKeep_1,deflateSetHeader:deflateSetHeader_1,deflate:deflate_2$1,deflateEnd:deflateEnd_1,deflateSetDictionary:deflateSetDictionary_1,deflateInfo:deflateInfo};const _has=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var assign=function(e){for(const t=Array.prototype.slice.call(arguments,1);t.length;){const a=t.shift();if(a){if("object"!=typeof a)throw new TypeError(a+"must be non-object");for(const t in a)_has(a,t)&&(e[t]=a[t])}}return e},flattenChunks=e=>{let t=0;for(let a=0,n=e.length;a<n;a++)t+=e[a].length;const a=new Uint8Array(t);for(let t,n=0,s=0,i=e.length;n<i;n++)t=e[n],a.set(t,s),s+=t.length;return a},common={assign:assign,flattenChunks:flattenChunks};let STR_APPLY_UIA_OK=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){STR_APPLY_UIA_OK=!1}const _utf8len=new Uint8Array(256);for(let e=0;256>e;e++)_utf8len[e]=252<=e?6:248<=e?5:240<=e?4:224<=e?3:192<=e?2:1;_utf8len[254]=_utf8len[254]=1;var string2buf=e=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return new TextEncoder().encode(e);let t,a,n,s,d,_=e.length,l=0;for(s=0;s<_;s++)a=e.charCodeAt(s),55296==(64512&a)&&s+1<_&&(n=e.charCodeAt(s+1),56320==(64512&n)&&(a=65536+(a-55296<<10)+(n-56320),s++)),l+=128>a?1:2048>a?2:65536>a?3:4;for(t=new Uint8Array(l),d=0,s=0;d<l;s++)a=e.charCodeAt(s),55296==(64512&a)&&s+1<_&&(n=e.charCodeAt(s+1),56320==(64512&n)&&(a=65536+(a-55296<<10)+(n-56320),s++)),128>a?t[d++]=a:2048>a?(t[d++]=192|a>>>6,t[d++]=128|63&a):65536>a?(t[d++]=224|a>>>12,t[d++]=128|63&a>>>6,t[d++]=128|63&a):(t[d++]=240|a>>>18,t[d++]=128|63&a>>>12,t[d++]=128|63&a>>>6,t[d++]=128|63&a);return t};const buf2binstring=(e,t)=>{if(65534>t&&e.subarray&&STR_APPLY_UIA_OK)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let a="";for(let n=0;n<t;n++)a+=String.fromCharCode(e[n]);return a};var buf2string=(e,t)=>{const a=t||e.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return new TextDecoder().decode(e.subarray(0,t));let n,s;const d=Array(2*a);for(s=0,n=0;n<a;){let t=e[n++];if(128>t){d[s++]=t;continue}let i=_utf8len[t];if(4<i){d[s++]=65533,n+=i-1;continue}for(t&=2===i?31:3===i?15:7;1<i&&n<a;)t=t<<6|63&e[n++],i--;if(1<i){d[s++]=65533;continue}65536>t?d[s++]=t:(t-=65536,d[s++]=55296|1023&t>>10,d[s++]=56320|1023&t)}return buf2binstring(d,s)},utf8border=(e,t)=>{t=t||e.length,t>e.length&&(t=e.length);let a=t-1;for(;0<=a&&128==(192&e[a]);)a--;return 0>a?t:0==a?t:a+_utf8len[e[a]]>t?a:t},strings={string2buf:string2buf,buf2string:buf2string,utf8border:utf8border};function ZStream(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var zstream=ZStream;const toString$1=Object.prototype.toString,{Z_NO_FLUSH:Z_NO_FLUSH$1,Z_SYNC_FLUSH,Z_FULL_FLUSH,Z_FINISH:Z_FINISH$2,Z_OK:Z_OK$2,Z_STREAM_END:Z_STREAM_END$2,Z_DEFAULT_COMPRESSION,Z_DEFAULT_STRATEGY,Z_DEFLATED:Z_DEFLATED$1}=constants$2;function Deflate$1(e){this.options=common.assign({level:Z_DEFAULT_COMPRESSION,method:Z_DEFLATED$1,chunkSize:16384,windowBits:15,memLevel:8,strategy:Z_DEFAULT_STRATEGY},e||{});let t=this.options;t.raw&&0<t.windowBits?t.windowBits=-t.windowBits:t.gzip&&0<t.windowBits&&16>t.windowBits&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;let a=deflate_1$2.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(a!==Z_OK$2)throw new Error(messages[a]);if(t.header&&deflate_1$2.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e="string"==typeof t.dictionary?strings.string2buf(t.dictionary):"[object ArrayBuffer]"===toString$1.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,a=deflate_1$2.deflateSetDictionary(this.strm,e),a!==Z_OK$2)throw new Error(messages[a]);this._dict_set=!0}}Deflate$1.prototype.push=function(e,t){const a=this.strm,n=this.options.chunkSize;let s,i;if(this.ended)return!1;for(i=t===~~t?t:!0===t?Z_FINISH$2:Z_NO_FLUSH$1,a.input="string"==typeof e?strings.string2buf(e):"[object ArrayBuffer]"===toString$1.call(e)?new Uint8Array(e):e,a.next_in=0,a.avail_in=a.input.length;;){if(0===a.avail_out&&(a.output=new Uint8Array(n),a.next_out=0,a.avail_out=n),(i===Z_SYNC_FLUSH||i===Z_FULL_FLUSH)&&6>=a.avail_out){this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;continue}if(s=deflate_1$2.deflate(a,i),s===Z_STREAM_END$2)return 0<a.next_out&&this.onData(a.output.subarray(0,a.next_out)),s=deflate_1$2.deflateEnd(this.strm),this.onEnd(s),this.ended=!0,s===Z_OK$2;if(0===a.avail_out){this.onData(a.output);continue}if(0<i&&0<a.next_out){this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;continue}if(0===a.avail_in)break}return!0},Deflate$1.prototype.onData=function(e){this.chunks.push(e)},Deflate$1.prototype.onEnd=function(e){e===Z_OK$2&&(this.result=common.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function deflateRaw$1(e,t){t=t||{},t.raw=!0;const a=new Deflate$1(t);if(a.push(e,!0),a.err)throw a.msg||messages[a.err];return a.result}const BAD$1=30,TYPE$1=12;var inffast=function(e,t){let a,n,s,i,d,_,l,o,r,h,c,u,g,m,p,b,w,f,v,k,x,y,z,E;const R=e.state;a=e.next_in,z=e.input,n=a+(e.avail_in-5),s=e.next_out,E=e.output,i=s-(t-e.avail_out),d=s+(e.avail_out-257),_=R.dmax,l=R.wsize,o=R.whave,r=R.wnext,h=R.window,c=R.hold,u=R.bits,g=R.lencode,m=R.distcode,p=(1<<R.lenbits)-1,b=(1<<R.distbits)-1;top:do{15>u&&(c+=z[a++]<<u,u+=8,c+=z[a++]<<u,u+=8),w=g[c&p];dolen:for(;;){if(f=w>>>24,c>>>=f,u-=f,f=255&w>>>16,0===f)E[s++]=65535&w;else if(16&f){v=65535&w,f&=15,f&&(u<f&&(c+=z[a++]<<u,u+=8),v+=c&(1<<f)-1,c>>>=f,u-=f),15>u&&(c+=z[a++]<<u,u+=8,c+=z[a++]<<u,u+=8),w=m[c&b];dodist:for(;;){if(f=w>>>24,c>>>=f,u-=f,f=255&w>>>16,16&f){if(k=65535&w,f&=15,u<f&&(c+=z[a++]<<u,u+=8,u<f&&(c+=z[a++]<<u,u+=8)),k+=c&(1<<f)-1,k>_){e.msg="invalid distance too far back",R.mode=BAD$1;break top}if(c>>>=f,u-=f,f=s-i,k>f){if(f=k-f,f>o&&R.sane){e.msg="invalid distance too far back",R.mode=BAD$1;break top}if(x=0,y=h,0===r){if(x+=l-f,f<v){v-=f;do E[s++]=h[x++];while(--f);x=s-k,y=E}}else if(r<f){if(x+=l+r-f,f-=r,f<v){v-=f;do E[s++]=h[x++];while(--f);if(x=0,r<v){f=r,v-=f;do E[s++]=h[x++];while(--f);x=s-k,y=E}}}else if(x+=r-f,f<v){v-=f;do E[s++]=h[x++];while(--f);x=s-k,y=E}for(;2<v;)E[s++]=y[x++],E[s++]=y[x++],E[s++]=y[x++],v-=3;v&&(E[s++]=y[x++],1<v&&(E[s++]=y[x++]))}else{x=s-k;do E[s++]=E[x++],E[s++]=E[x++],E[s++]=E[x++],v-=3;while(2<v);v&&(E[s++]=E[x++],1<v&&(E[s++]=E[x++]))}}else if(0==(64&f)){w=m[(65535&w)+(c&(1<<f)-1)];continue dodist}else{e.msg="invalid distance code",R.mode=BAD$1;break top}break}}else if(0==(64&f)){w=g[(65535&w)+(c&(1<<f)-1)];continue dolen}else if(32&f){R.mode=TYPE$1;break top}else{e.msg="invalid literal/length code",R.mode=BAD$1;break top}break}}while(a<n&&s<d);return v=u>>3,a-=v,u-=v<<3,c&=(1<<u)-1,e.next_in=a,e.next_out=s,e.avail_in=a<n?5+(n-a):5-(a-n),e.avail_out=s<d?257+(d-s):257-(s-d),R.hold=c,void(R.bits=u)};const MAXBITS=15,ENOUGH_LENS$1=852,ENOUGH_DISTS$1=592,CODES$1=0,LENS$1=1,DISTS$1=2,lbase=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),lext=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),dbase=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),dext=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),inflate_table=(e,t,a,n,s,i,d,_)=>{const l=_.bits;let o,r,h,c,u,g,m=0,p=0,b=0,w=0,f=0,v=0,k=0,x=0,y=0,z=0,E=null,R=0;const Z=new Uint16Array(16),S=new Uint16Array(16);let A,D,O,T=null,F=0;for(m=0;m<=MAXBITS;m++)Z[m]=0;for(p=0;p<n;p++)Z[t[a+p]]++;for(f=l,w=MAXBITS;1<=w&&0===Z[w];w--);if(f>w&&(f=w),0===w)return s[i++]=20971520,s[i++]=20971520,_.bits=1,0;for(b=1;b<w&&0===Z[b];b++);for(f<b&&(f=b),x=1,m=1;m<=MAXBITS;m++)if(x<<=1,x-=Z[m],0>x)return-1;if(0<x&&(e===CODES$1||1!==w))return-1;for(S[1]=0,m=1;m<MAXBITS;m++)S[m+1]=S[m]+Z[m];for(p=0;p<n;p++)0!==t[a+p]&&(d[S[t[a+p]]++]=p);if(e===CODES$1?(E=T=d,g=19):e===LENS$1?(E=lbase,R-=257,T=lext,F-=257,g=256):(E=dbase,T=dext,g=-1),z=0,p=0,m=b,u=i,v=f,k=0,h=-1,y=1<<f,c=y-1,e===LENS$1&&y>ENOUGH_LENS$1||e===DISTS$1&&y>ENOUGH_DISTS$1)return 1;for(;;){A=m-k,d[p]<g?(D=0,O=d[p]):d[p]>g?(D=T[F+d[p]],O=E[R+d[p]]):(D=96,O=0),o=1<<m-k,r=1<<v,b=r;do r-=o,s[u+(z>>k)+r]=0|(A<<24|D<<16|O);while(0!==r);for(o=1<<m-1;z&o;)o>>=1;if(0===o?z=0:(z&=o-1,z+=o),p++,0==--Z[m]){if(m===w)break;m=t[a+d[p]]}if(m>f&&(z&c)!==h){for(0===k&&(k=f),u+=b,v=m-k,x=1<<v;v+k<w&&(x-=Z[v+k],!(0>=x));)v++,x<<=1;if(y+=1<<v,e===LENS$1&&y>ENOUGH_LENS$1||e===DISTS$1&&y>ENOUGH_DISTS$1)return 1;h=z&c,s[h]=0|(f<<24|v<<16|u-i)}}return 0!==z&&(s[u+z]=0|(4194304|m-k<<24)),_.bits=f,0};var inftrees=inflate_table;const CODES=0,LENS=1,DISTS=2,{Z_FINISH:Z_FINISH$1,Z_BLOCK,Z_TREES,Z_OK:Z_OK$1,Z_STREAM_END:Z_STREAM_END$1,Z_NEED_DICT:Z_NEED_DICT$1,Z_STREAM_ERROR:Z_STREAM_ERROR$1,Z_DATA_ERROR:Z_DATA_ERROR$1,Z_MEM_ERROR:Z_MEM_ERROR$1,Z_BUF_ERROR,Z_DEFLATED}=constants$2,HEAD=1,FLAGS=2,TIME=3,OS=4,EXLEN=5,EXTRA=6,NAME=7,COMMENT=8,HCRC=9,DICTID=10,DICT=11,TYPE=12,TYPEDO=13,STORED=14,COPY_=15,COPY=16,TABLE=17,LENLENS=18,CODELENS=19,LEN_=20,LEN=21,LENEXT=22,DIST=23,DISTEXT=24,MATCH=25,LIT=26,CHECK=27,LENGTH=28,DONE=29,BAD=30,MEM=31,SYNC=32,ENOUGH_LENS=852,ENOUGH_DISTS=592,MAX_WBITS=15,DEF_WBITS=MAX_WBITS,zswap32=e=>(255&e>>>24)+(65280&e>>>8)+((65280&e)<<8)+((255&e)<<24);function InflateState(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const inflateResetKeep=e=>{if(!e||!e.state)return Z_STREAM_ERROR$1;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=HEAD,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(ENOUGH_LENS),t.distcode=t.distdyn=new Int32Array(ENOUGH_DISTS),t.sane=1,t.back=-1,Z_OK$1},inflateReset=e=>{if(!e||!e.state)return Z_STREAM_ERROR$1;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,inflateResetKeep(e)},inflateReset2=(e,t)=>{let a;if(!e||!e.state)return Z_STREAM_ERROR$1;const n=e.state;return(0>t?(a=0,t=-t):(a=(t>>4)+1,48>t&&(t&=15)),t&&(8>t||15<t))?Z_STREAM_ERROR$1:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=a,n.wbits=t,inflateReset(e))},inflateInit2=(e,t)=>{if(!e)return Z_STREAM_ERROR$1;const a=new InflateState;e.state=a,a.window=null;const n=inflateReset2(e,t);return n!==Z_OK$1&&(e.state=null),n},inflateInit=e=>inflateInit2(e,DEF_WBITS);let lenfix,distfix,virgin=!0;const fixedtables=e=>{if(virgin){lenfix=new Int32Array(512),distfix=new Int32Array(32);let t=0;for(;144>t;)e.lens[t++]=8;for(;256>t;)e.lens[t++]=9;for(;280>t;)e.lens[t++]=7;for(;288>t;)e.lens[t++]=8;for(inftrees(LENS,e.lens,0,288,lenfix,0,e.work,{bits:9}),t=0;32>t;)e.lens[t++]=5;inftrees(DISTS,e.lens,0,32,distfix,0,e.work,{bits:5}),virgin=!1}e.lencode=lenfix,e.lenbits=9,e.distcode=distfix,e.distbits=5},updatewindow=(e,t,a,n)=>{let s;const i=e.state;return null===i.window&&(i.wsize=1<<i.wbits,i.wnext=0,i.whave=0,i.window=new Uint8Array(i.wsize)),n>=i.wsize?(i.window.set(t.subarray(a-i.wsize,a),0),i.wnext=0,i.whave=i.wsize):(s=i.wsize-i.wnext,s>n&&(s=n),i.window.set(t.subarray(a-n,a-n+s),i.wnext),n-=s,n?(i.window.set(t.subarray(a-n,a),0),i.wnext=n,i.whave=i.wsize):(i.wnext+=s,i.wnext===i.wsize&&(i.wnext=0),i.whave<i.wsize&&(i.whave+=s))),0},inflate$2=(e,t)=>{let a,s,i,d,_,l,o,r,h,c,u,g,m,p,b,w,f,v,k,x,y,z,E=0;const R=new Uint8Array(4);let Z,S;const A=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return Z_STREAM_ERROR$1;a=e.state,a.mode===TYPE&&(a.mode=TYPEDO),_=e.next_out,i=e.output,o=e.avail_out,d=e.next_in,s=e.input,l=e.avail_in,r=a.hold,h=a.bits,c=l,u=o,z=Z_OK$1;inf_leave:for(;;)switch(a.mode){case HEAD:if(0===a.wrap){a.mode=TYPEDO;break}for(;16>h;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}if(2&a.wrap&&35615===r){a.check=0,R[0]=255&r,R[1]=255&r>>>8,a.check=crc32_1(a.check,R,2,0),r=0,h=0,a.mode=FLAGS;break}if(a.flags=0,a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&r)<<8)+(r>>8))%31){e.msg="incorrect header check",a.mode=BAD;break}if((15&r)!==Z_DEFLATED){e.msg="unknown compression method",a.mode=BAD;break}if(r>>>=4,h-=4,y=(15&r)+8,0===a.wbits)a.wbits=y;else if(y>a.wbits){e.msg="invalid window size",a.mode=BAD;break}a.dmax=1<<a.wbits,e.adler=a.check=1,a.mode=512&r?DICTID:TYPE,r=0,h=0;break;case FLAGS:for(;16>h;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}if(a.flags=r,(255&a.flags)!==Z_DEFLATED){e.msg="unknown compression method",a.mode=BAD;break}if(57344&a.flags){e.msg="unknown header flags set",a.mode=BAD;break}a.head&&(a.head.text=1&r>>8),512&a.flags&&(R[0]=255&r,R[1]=255&r>>>8,a.check=crc32_1(a.check,R,2,0)),r=0,h=0,a.mode=TIME;case TIME:for(;32>h;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}a.head&&(a.head.time=r),512&a.flags&&(R[0]=255&r,R[1]=255&r>>>8,R[2]=255&r>>>16,R[3]=255&r>>>24,a.check=crc32_1(a.check,R,4,0)),r=0,h=0,a.mode=OS;case OS:for(;16>h;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}a.head&&(a.head.xflags=255&r,a.head.os=r>>8),512&a.flags&&(R[0]=255&r,R[1]=255&r>>>8,a.check=crc32_1(a.check,R,2,0)),r=0,h=0,a.mode=EXLEN;case EXLEN:if(1024&a.flags){for(;16>h;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}a.length=r,a.head&&(a.head.extra_len=r),512&a.flags&&(R[0]=255&r,R[1]=255&r>>>8,a.check=crc32_1(a.check,R,2,0)),r=0,h=0}else a.head&&(a.head.extra=null);a.mode=EXTRA;case EXTRA:if(1024&a.flags&&(g=a.length,g>l&&(g=l),g&&(a.head&&(y=a.head.extra_len-a.length,!a.head.extra&&(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(s.subarray(d,d+g),y)),512&a.flags&&(a.check=crc32_1(a.check,s,g,d)),l-=g,d+=g,a.length-=g),a.length))break inf_leave;a.length=0,a.mode=NAME;case NAME:if(2048&a.flags){if(0===l)break inf_leave;g=0;do y=s[d+g++],a.head&&y&&65536>a.length&&(a.head.name+=String.fromCharCode(y));while(y&&g<l);if(512&a.flags&&(a.check=crc32_1(a.check,s,g,d)),l-=g,d+=g,y)break inf_leave}else a.head&&(a.head.name=null);a.length=0,a.mode=COMMENT;case COMMENT:if(4096&a.flags){if(0===l)break inf_leave;g=0;do y=s[d+g++],a.head&&y&&65536>a.length&&(a.head.comment+=String.fromCharCode(y));while(y&&g<l);if(512&a.flags&&(a.check=crc32_1(a.check,s,g,d)),l-=g,d+=g,y)break inf_leave}else a.head&&(a.head.comment=null);a.mode=HCRC;case HCRC:if(512&a.flags){for(;16>h;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}if(r!==(65535&a.check)){e.msg="header crc mismatch",a.mode=BAD;break}r=0,h=0}a.head&&(a.head.hcrc=1&a.flags>>9,a.head.done=!0),e.adler=a.check=0,a.mode=TYPE;break;case DICTID:for(;32>h;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}e.adler=a.check=zswap32(r),r=0,h=0,a.mode=DICT;case DICT:if(0===a.havedict)return e.next_out=_,e.avail_out=o,e.next_in=d,e.avail_in=l,a.hold=r,a.bits=h,Z_NEED_DICT$1;e.adler=a.check=1,a.mode=TYPE;case TYPE:if(t===Z_BLOCK||t===Z_TREES)break inf_leave;case TYPEDO:if(a.last){r>>>=7&h,h-=7&h,a.mode=CHECK;break}for(;3>h;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}switch(a.last=1&r,r>>>=1,h-=1,3&r){case 0:a.mode=STORED;break;case 1:if(fixedtables(a),a.mode=LEN_,t===Z_TREES){r>>>=2,h-=2;break inf_leave}break;case 2:a.mode=TABLE;break;case 3:e.msg="invalid block type",a.mode=BAD;}r>>>=2,h-=2;break;case STORED:for(r>>>=7&h,h-=7&h;32>h;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}if((65535&r)!=(65535^r>>>16)){e.msg="invalid stored block lengths",a.mode=BAD;break}if(a.length=65535&r,r=0,h=0,a.mode=COPY_,t===Z_TREES)break inf_leave;case COPY_:a.mode=COPY;case COPY:if(g=a.length,g){if(g>l&&(g=l),g>o&&(g=o),0===g)break inf_leave;i.set(s.subarray(d,d+g),_),l-=g,d+=g,o-=g,_+=g,a.length-=g;break}a.mode=TYPE;break;case TABLE:for(;14>h;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}if(a.nlen=(31&r)+257,r>>>=5,h-=5,a.ndist=(31&r)+1,r>>>=5,h-=5,a.ncode=(15&r)+4,r>>>=4,h-=4,286<a.nlen||30<a.ndist){e.msg="too many length or distance symbols",a.mode=BAD;break}a.have=0,a.mode=LENLENS;case LENLENS:for(;a.have<a.ncode;){for(;3>h;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}a.lens[A[a.have++]]=7&r,r>>>=3,h-=3}for(;19>a.have;)a.lens[A[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,Z={bits:a.lenbits},z=inftrees(CODES,a.lens,0,19,a.lencode,0,a.work,Z),a.lenbits=Z.bits,z){e.msg="invalid code lengths set",a.mode=BAD;break}a.have=0,a.mode=CODELENS;case CODELENS:for(;a.have<a.nlen+a.ndist;){for(;;){if(E=a.lencode[r&(1<<a.lenbits)-1],b=E>>>24,w=255&E>>>16,f=65535&E,b<=h)break;if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}if(16>f)r>>>=b,h-=b,a.lens[a.have++]=f;else{if(16===f){for(S=b+2;h<S;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}if(r>>>=b,h-=b,0===a.have){e.msg="invalid bit length repeat",a.mode=BAD;break}y=a.lens[a.have-1],g=3+(3&r),r>>>=2,h-=2}else if(17===f){for(S=b+3;h<S;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}r>>>=b,h-=b,y=0,g=3+(7&r),r>>>=3,h-=3}else{for(S=b+7;h<S;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}r>>>=b,h-=b,y=0,g=11+(127&r),r>>>=7,h-=7}if(a.have+g>a.nlen+a.ndist){e.msg="invalid bit length repeat",a.mode=BAD;break}for(;g--;)a.lens[a.have++]=y}}if(a.mode===BAD)break;if(0===a.lens[256]){e.msg="invalid code -- missing end-of-block",a.mode=BAD;break}if(a.lenbits=9,Z={bits:a.lenbits},z=inftrees(LENS,a.lens,0,a.nlen,a.lencode,0,a.work,Z),a.lenbits=Z.bits,z){e.msg="invalid literal/lengths set",a.mode=BAD;break}if(a.distbits=6,a.distcode=a.distdyn,Z={bits:a.distbits},z=inftrees(DISTS,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,Z),a.distbits=Z.bits,z){e.msg="invalid distances set",a.mode=BAD;break}if(a.mode=LEN_,t===Z_TREES)break inf_leave;case LEN_:a.mode=LEN;case LEN:if(6<=l&&258<=o){e.next_out=_,e.avail_out=o,e.next_in=d,e.avail_in=l,a.hold=r,a.bits=h,inffast(e,u),_=e.next_out,i=e.output,o=e.avail_out,d=e.next_in,s=e.input,l=e.avail_in,r=a.hold,h=a.bits,a.mode===TYPE&&(a.back=-1);break}for(a.back=0;;){if(E=a.lencode[r&(1<<a.lenbits)-1],b=E>>>24,w=255&E>>>16,f=65535&E,b<=h)break;if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}if(w&&0==(240&w)){for(v=b,k=w,x=f;;){if(E=a.lencode[x+((r&(1<<v+k)-1)>>v)],b=E>>>24,w=255&E>>>16,f=65535&E,v+b<=h)break;if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}r>>>=v,h-=v,a.back+=v}if(r>>>=b,h-=b,a.back+=b,a.length=f,0===w){a.mode=LIT;break}if(32&w){a.back=-1,a.mode=TYPE;break}if(64&w){e.msg="invalid literal/length code",a.mode=BAD;break}a.extra=15&w,a.mode=LENEXT;case LENEXT:if(a.extra){for(S=a.extra;h<S;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}a.length+=r&(1<<a.extra)-1,r>>>=a.extra,h-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=DIST;case DIST:for(;;){if(E=a.distcode[r&(1<<a.distbits)-1],b=E>>>24,w=255&E>>>16,f=65535&E,b<=h)break;if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}if(0==(240&w)){for(v=b,k=w,x=f;;){if(E=a.distcode[x+((r&(1<<v+k)-1)>>v)],b=E>>>24,w=255&E>>>16,f=65535&E,v+b<=h)break;if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}r>>>=v,h-=v,a.back+=v}if(r>>>=b,h-=b,a.back+=b,64&w){e.msg="invalid distance code",a.mode=BAD;break}a.offset=f,a.extra=15&w,a.mode=DISTEXT;case DISTEXT:if(a.extra){for(S=a.extra;h<S;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}a.offset+=r&(1<<a.extra)-1,r>>>=a.extra,h-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){e.msg="invalid distance too far back",a.mode=BAD;break}a.mode=MATCH;case MATCH:if(0===o)break inf_leave;if(g=u-o,a.offset>g){if(g=a.offset-g,g>a.whave&&a.sane){e.msg="invalid distance too far back",a.mode=BAD;break}g>a.wnext?(g-=a.wnext,m=a.wsize-g):m=a.wnext-g,g>a.length&&(g=a.length),p=a.window}else p=i,m=_-a.offset,g=a.length;g>o&&(g=o),o-=g,a.length-=g;do i[_++]=p[m++];while(--g);0===a.length&&(a.mode=LEN);break;case LIT:if(0===o)break inf_leave;i[_++]=a.length,o--,a.mode=LEN;break;case CHECK:if(a.wrap){for(;32>h;){if(0===l)break inf_leave;l--,r|=s[d++]<<h,h+=8}if(u-=o,e.total_out+=u,a.total+=u,u&&(e.adler=a.check=a.flags?crc32_1(a.check,i,u,_-u):adler32_1(a.check,i,u,_-u)),u=o,(a.flags?r:zswap32(r))!==a.check){e.msg="incorrect data check",a.mode=BAD;break}r=0,h=0}a.mode=LENGTH;case LENGTH:if(a.wrap&&a.flags){for(;32>h;){if(0===l)break inf_leave;l--,r+=s[d++]<<h,h+=8}if(r!==(4294967295&a.total)){e.msg="incorrect length check",a.mode=BAD;break}r=0,h=0}a.mode=DONE;case DONE:z=Z_STREAM_END$1;break inf_leave;case BAD:z=Z_DATA_ERROR$1;break inf_leave;case MEM:return Z_MEM_ERROR$1;case SYNC:default:return Z_STREAM_ERROR$1;}if(e.next_out=_,e.avail_out=o,e.next_in=d,e.avail_in=l,a.hold=r,a.bits=h,(a.wsize||u!==e.avail_out&&a.mode<BAD&&(a.mode<CHECK||t!==Z_FINISH$1))&&updatewindow(e,e.output,e.next_out,u-e.avail_out));return c-=e.avail_in,u-=e.avail_out,e.total_in+=c,e.total_out+=u,a.total+=u,a.wrap&&u&&(e.adler=a.check=a.flags?crc32_1(a.check,i,u,e.next_out-u):adler32_1(a.check,i,u,e.next_out-u)),e.data_type=a.bits+(a.last?64:0)+(a.mode===TYPE?128:0)+(a.mode===LEN_||a.mode===COPY_?256:0),(0===c&&0===u||t===Z_FINISH$1)&&z===Z_OK$1&&(z=Z_BUF_ERROR),z},inflateEnd=e=>{if(!e||!e.state)return Z_STREAM_ERROR$1;let t=e.state;return t.window&&(t.window=null),e.state=null,Z_OK$1},inflateGetHeader=(e,t)=>{if(!e||!e.state)return Z_STREAM_ERROR$1;const a=e.state;return 0==(2&a.wrap)?Z_STREAM_ERROR$1:(a.head=t,t.done=!1,Z_OK$1)},inflateSetDictionary=(e,t)=>{const a=t.length;let n,s,i;return e&&e.state?(n=e.state,0!==n.wrap&&n.mode!==DICT)?Z_STREAM_ERROR$1:n.mode===DICT&&(s=1,s=adler32_1(s,t,a,0),s!==n.check)?Z_DATA_ERROR$1:(i=updatewindow(e,t,a,a),i)?(n.mode=MEM,Z_MEM_ERROR$1):(n.havedict=1,Z_OK$1):Z_STREAM_ERROR$1};var inflateReset_1=inflateReset,inflateReset2_1=inflateReset2,inflateResetKeep_1=inflateResetKeep,inflateInit_1=inflateInit,inflateInit2_1=inflateInit2,inflate_2$1=inflate$2,inflateEnd_1=inflateEnd,inflateGetHeader_1=inflateGetHeader,inflateSetDictionary_1=inflateSetDictionary,inflateInfo="pako inflate (from Nodeca project)",inflate_1$2={inflateReset:inflateReset_1,inflateReset2:inflateReset2_1,inflateResetKeep:inflateResetKeep_1,inflateInit:inflateInit_1,inflateInit2:inflateInit2_1,inflate:inflate_2$1,inflateEnd:inflateEnd_1,inflateGetHeader:inflateGetHeader_1,inflateSetDictionary:inflateSetDictionary_1,inflateInfo:inflateInfo};function GZheader(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var gzheader=GZheader;const toString=Object.prototype.toString,{Z_NO_FLUSH,Z_FINISH,Z_OK,Z_STREAM_END,Z_NEED_DICT,Z_STREAM_ERROR,Z_DATA_ERROR,Z_MEM_ERROR}=constants$2;function Inflate$1(e){this.options=common.assign({chunkSize:65536,windowBits:15,to:""},e||{});const t=this.options;t.raw&&0<=t.windowBits&&16>t.windowBits&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),0<=t.windowBits&&16>t.windowBits&&!(e&&e.windowBits)&&(t.windowBits+=32),15<t.windowBits&&48>t.windowBits&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;let a=inflate_1$2.inflateInit2(this.strm,t.windowBits);if(a!==Z_OK)throw new Error(messages[a]);if(this.header=new gzheader,inflate_1$2.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=strings.string2buf(t.dictionary):"[object ArrayBuffer]"===toString.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(a=inflate_1$2.inflateSetDictionary(this.strm,t.dictionary),a!==Z_OK)))throw new Error(messages[a])}Inflate$1.prototype.push=function(e,t){const a=this.strm,n=this.options.chunkSize,s=this.options.dictionary;let i,d,_;if(this.ended)return!1;for(d=t===~~t?t:!0===t?Z_FINISH:Z_NO_FLUSH,a.input="[object ArrayBuffer]"===toString.call(e)?new Uint8Array(e):e,a.next_in=0,a.avail_in=a.input.length;;){for(0===a.avail_out&&(a.output=new Uint8Array(n),a.next_out=0,a.avail_out=n),i=inflate_1$2.inflate(a,d),i===Z_NEED_DICT&&s&&(i=inflate_1$2.inflateSetDictionary(a,s),i===Z_OK?i=inflate_1$2.inflate(a,d):i===Z_DATA_ERROR&&(i=Z_NEED_DICT));0<a.avail_in&&i===Z_STREAM_END&&0<a.state.wrap&&0!==e[a.next_in];)inflate_1$2.inflateReset(a),i=inflate_1$2.inflate(a,d);switch(i){case Z_STREAM_ERROR:case Z_DATA_ERROR:case Z_NEED_DICT:case Z_MEM_ERROR:return this.onEnd(i),this.ended=!0,!1;}if(_=a.avail_out,a.next_out&&(0===a.avail_out||i===Z_STREAM_END))if("string"===this.options.to){let e=strings.utf8border(a.output,a.next_out),t=a.next_out-e,s=strings.buf2string(a.output,e);a.next_out=t,a.avail_out=n-t,t&&a.output.set(a.output.subarray(e,e+t),0),this.onData(s)}else this.onData(a.output.length===a.next_out?a.output:a.output.subarray(0,a.next_out));if(i!==Z_OK||0!==_){if(i===Z_STREAM_END)return i=inflate_1$2.inflateEnd(this.strm),this.onEnd(i),this.ended=!0,!0;if(0===a.avail_in)break}}return!0},Inflate$1.prototype.onData=function(e){this.chunks.push(e)},Inflate$1.prototype.onEnd=function(e){e===Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=common.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function inflateRaw$1(e,t){t=t||{},t.raw=!0;const a=new Inflate$1(t);if(a.push(e),a.err)throw a.msg||messages[a.err];return a.result}export{deflateRaw$1 as deflateRaw,inflateRaw$1 as inflateRaw};